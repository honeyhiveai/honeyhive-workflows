name: federated-byoc-stack
description: Federated BYOC (Bring Your Own Cloud) - Customer's cloud, HoneyHive managed
terraform_binary: terraform

# Stack configuration for federated BYOC
stack_configuration:
  parallelism: 3
  retry_max_attempts: 3  # More retries for customer environments
  retry_sleep_interval_sec: 10

# Federated BYOC - minimal footprint in customer account
units:
  # Substrate layer - customer networking
  - path: units/substrate/vpc-next
    description: VPC in customer's account (may use existing)
    
  - path: units/substrate/dns-next
    description: Private DNS for service discovery
    dependencies:
      - units/substrate/vpc-next
  
  # Customer VPN - they manage access
  - path: units/substrate/customer-vpn-next
    description: Integration with customer's VPN solution
    dependencies:
      - units/substrate/vpc-next
    skip: ${get_env("USE_CUSTOMER_VPN", "false")}  # Only if customer provides
  
  # Hosting layer - minimal EKS
  - path: units/hosting/cluster-next
    description: EKS cluster in customer account
    dependencies:
      - units/substrate/vpc-next
    
  - path: units/hosting/karpenter-next
    description: Auto-scaling (optional for BYOC)
    dependencies:
      - units/hosting/cluster-next
    skip: ${get_env("SKIP_AUTOSCALING", "false")}  # Customer may prefer fixed
    
  - path: units/hosting/addons-next
    description: Essential EKS addons only
    dependencies:
      - units/hosting/cluster-next
    
  - path: units/hosting/pod-identities-next
    description: Pod identities using customer's IAM
    dependencies:
      - units/hosting/cluster-next
  
  # Application layer - customer data stays in their account
  - path: units/application/database-next
    description: Database in customer account
    dependencies:
      - units/substrate/vpc-next
      - units/hosting/cluster-next
    skip: ${get_env("USE_CUSTOMER_DATABASE", "false")}  # May use existing RDS
    
  - path: units/application/s3-next
    description: S3 buckets in customer account
    dependencies:
      - units/hosting/cluster-next
    skip: ${get_env("USE_CUSTOMER_S3", "false")}  # May use existing buckets
  
  # BYOC specific units
  - path: units/byoc/cross-account-roles-next
    description: IAM roles for HoneyHive management access
    
  - path: units/byoc/compliance-controls-next
    description: Compliance and audit controls (CloudTrail, Config)
    dependencies:
      - units/substrate/vpc-next
      
  - path: units/byoc/data-residency-next
    description: Ensure data stays in customer's region
    dependencies:
      - units/application/s3-next
      - units/application/database-next
      
  - path: units/byoc/customer-kms-next
    description: Use customer's KMS keys for encryption
    
  - path: units/byoc/network-isolation-next
    description: PrivateLink endpoints for HoneyHive services
    dependencies:
      - units/substrate/vpc-next
